(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{433:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"为什么要分库分表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要分库分表"}},[s._v("#")]),s._v(" 为什么要分库分表？")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("分表")]),s._v(" "),t("p",[s._v("我们平时做项目开发。一开始，通常都先用一张数据表，随着业务的发展，我们表中的数据量会变的越来越大，一般来说数据表写到 2kw 条数据之后，底层 B+树的层级结构就会变高，不同层级的数据页一般都放在磁盘里不同的地方，换言之，磁盘 IO 就会增多，带来的便是查询性能变差。我们为了解决单表的查询性能问题，一般会进行分表操作。")])]),s._v(" "),t("li",[t("p",[s._v("分库")]),s._v(" "),t("p",[s._v("同时我们业务的用户活跃度也会越来越高，并发量级不断加大，那么可能会达到单个数据库的处理能力上限。此时我们为了解决数据库的处理性能瓶颈，一般会进行分库操作。")])])]),s._v(" "),t("h2",{attrs:{id:"如何制定分库分表方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何制定分库分表方案"}},[s._v("#")]),s._v(" 如何制定分库分表方案？")]),s._v(" "),t("h3",{attrs:{id:"可持续性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可持续性"}},[s._v("#")]),s._v(" 可持续性")]),s._v(" "),t("p",[s._v("在对数据库进行分库分表前，要先考虑方案的可持续性。\n那何为可持续性?其实就是："),t("strong",[s._v("业务数据量级和业务流量未来进一步升高达到新的量级的时候，我们的分库分表方案可以持续使用")]),s._v("。")]),s._v(" "),t("p",[s._v("一个通俗的案例，假定当前我们分库分表的方案为 10 库 100 表，那么未来某个时间点，若 10 个库仍然无法应对用户的流量压力，或者 10 个库的磁盘使用即将达到物理上限时，我们的方案能够进行平滑扩容。")]),s._v(" "),t("h3",{attrs:{id:"数据偏斜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据偏斜"}},[s._v("#")]),s._v(" 数据偏斜")]),s._v(" "),t("p",[s._v("一个良好的分库分表方案，它的数据应该是需要比较均匀的分散在各个库表中的。")]),s._v(" "),t("p",[s._v("如果我们进行一个拍脑袋式的分库分表设计，很容易会遇到以下类似问题：")]),s._v(" "),t("p",[s._v("某个数据库实例中，部分表的数据很多，而其他表中的数据却寥寥无几，业务上的表现经常是延迟忽高忽低，飘忽不定。")]),s._v(" "),t("p",[s._v("数据库集群中，部分集群的磁盘使用增长特别块，而部分集群的磁盘增长却很缓慢。每个库的增长步调不一致，这种情况会给后续的扩容带来步调不一致，无法统一操作的问题。")]),s._v(" "),t("p",[s._v("这边我们定义分库分表最大数据偏斜率为：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("(数据量最大样本-数据量最小样本)/数据量最小样本。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("一般来说，如果我们的最大数据偏斜率在 5% 以内是可以接受的。")]),s._v(" "),t("h2",{attrs:{id:"常见的分库分表方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的分库分表方案"}},[s._v("#")]),s._v(" 常见的分库分表方案")]),s._v(" "),t("h3",{attrs:{id:"一、range-范围分表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、range-范围分表"}},[s._v("#")]),s._v(" 一、Range 范围分表")]),s._v(" "),t("p",[s._v("顾名思义，该方案根据数据范围划分数据的存放位置。通过数据的范围进行分库分表，该方案是最朴实的一种分库方案，它也可以和其他分库分表方案灵活结合使用。")]),s._v(" "),t("p",[s._v("时下非常流行的分布式数据库：TiDB 数据库，针对 TiKV 中数据的打散，也是基于 Range 的方式进行，将不同范围内的[StartKey，EndKey)分配到不同的 Region 上。")]),s._v(" "),t("p",[s._v("我们假设每张分表能放 2kw 行数据。那 user0 就放主键 id 为 1~2kw 的数据。"),t("code",[s._v("user1")]),s._v("就放 id 为"),t("code",[s._v("2kw+1 ~ 4kw")]),s._v("，"),t("code",[s._v("user2")]),s._v("就放 id 为"),t("code",[s._v("4kw+1 ~ 6kw")]),s._v("， "),t("code",[s._v("userN")]),s._v("就放 "),t("code",[s._v("2N kw+1 ~ 2(N+1)kw")]),s._v("。这样读取数据只需根据"),t("code",[s._v("ID/2kw")]),s._v("就可以索引到具体的表。")]),s._v(" "),t("p",[s._v("下面我们看看该方案的缺点：")]),s._v(" "),t("ul",[t("li",[s._v("最明显的就是数据热点问题，新写入的数据一般都会落到某一张表上，并且新写入的数据读取的频率也会比较高，那这张表就会出现读写热点问题。")]),s._v(" "),t("li",[s._v("新库和新表的追加问题。一般我们线上运行的应用程序是没有数据库的建库建表权限的，故我们需要提前将新的库表提前建立，防止线上故障。这点非常容易被遗忘，尤其是稳定跑了几年没有迭代任务，或者人员又交替频繁的模块")])]),s._v(" "),t("h3",{attrs:{id:"二、hash-取模分库分表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、hash-取模分库分表"}},[s._v("#")]),s._v(" 二、Hash 取模分库分表")]),s._v(" "),t("p",[s._v("Hash 分库分表是最大众最普遍的方案,主要的核心思想就是先计算 hash 值，然后通过 hash 取模的方式来计算分片的位置。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取Hash值")]),s._v("\nint "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("hash")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userId.hashCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总分片数")]),s._v("\nint sumSlot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DB_CNT * TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分片序号")]),s._v("\nint slot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math.abs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hash % sumSlot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据分片序号获取数据库和表的idx")]),s._v("\nint dbIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot / TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库idx")]),s._v("\nint tblIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot % TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表idx")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("举例：以 10 库（每库 10 表）共 100 表为例，通过翻倍扩容后，变成 20 库 200 表。\n此时有两个 Hash 值分别为 101 和 201")]),s._v(" "),t("p",[s._v("翻倍前")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("DB_CNT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nTBL_CNT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总分片数")]),s._v("\nint sumSlot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DB_CNT * TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分片序号")]),s._v("\nint slot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math.abs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hash % sumSlot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 101 % 100 = 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 201 % 100 = 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新修改二次求值方案")]),s._v("\nint dbIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot / TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库idx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 / 10 = 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 / 10 = 0")]),s._v("\nint tblIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot % TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表idx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 % 10 = 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 % 10 = 1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("翻倍后")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("DB_CNT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\nTBL_CNT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总分片数")]),s._v("\nint sumSlot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DB_CNT * TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 200")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分片序号")]),s._v("\nint slot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math.abs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hash % sumSlot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 101 % 200 = 101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 201 % 200 = 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新修改二次求值方案")]),s._v("\nint dbIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot / TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库idx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 101 / 10 = 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 / 10 = 0")]),s._v("\nint tblIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slot % TBL_CNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表idx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 101 % 10 = 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 % 10 = 1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("通过翻倍扩容后，我们的表序号一定维持不变，库序号可能还是在原来库，也可能平移到了新库中(原库序号加上原分库数)，完全符合我们需要的扩容持久性方案。")]),s._v(" "),t("h3",{attrs:{id:"三、基因法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、基因法"}},[s._v("#")]),s._v(" 三、基因法")]),s._v(" "),t("p",[s._v("使用相对独立的 Hash 值来计算库序号和表序号。")]),s._v(" "),t("p",[s._v("这也是一种常用的方案，我们称为基因法，即使用原分片键中的某些基因(例如前四位)作为库的计算因子，而使用另外一些基因作为表的计算因子。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" dbIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Math")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("abs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DB_CNT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" tblIdx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Math")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("abs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TBL_CNT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"读扩散问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读扩散问题"}},[s._v("#")]),s._v(" 读扩散问题")]),s._v(" "),t("p",[s._v("我们上面提到的好几种分表方式，都用了 id 这一列作为分表的依据，这其实就是所谓的分片键。实际上我们一般也是用的数据库主键作为分片键。")]),s._v(" "),t("p",[s._v("这样，理想情况下我们已知一个 id，不管是根据哪种规则，我们都能很快定位到该读哪个分表。但很多情况下，我们的查询又不是只查主键，而是通过别的字段去查询。而其他字段又没有分片索引，没法定位到具体要到哪个分表上去执行 sql，而如果一个库一个库去查询就会引发"),t("code",[s._v("读扩散")]),s._v("问题。这种场合，"),t("code",[s._v("倒排索引")]),s._v("的形式来加速数据查询。")]),s._v(" "),t("p",[s._v("举个例子，我同样是一行数据 id,name,age。在 mysql 里，你得根据 id 分片，如果要支持 name 和 age 的查询，可以使用"),t("code",[s._v("elasticSearch")]),s._v("，它会在它内部以 id 分片键进行分片，同时还能建一个 name 到 id，和一个 age 到 id 的倒排索引,先用 name 查到对应的 id，再拿 id 去获取具体的数据。这其实就像是建立了一个新的索引一样。")]),s._v(" "),t("p",[s._v("而且将 mysql 接入 es 也非常简单，我们可以通过开源工具 canal 监听 mysql 的 binlog 日志变更，再将数据解析后写入 es，这样 es 就能提供近实时的查询能力。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.xiaobaidebug.top/mysql%E5%90%8C%E6%AD%A5es.drawio.png",alt:"在这里插入图片描述"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);