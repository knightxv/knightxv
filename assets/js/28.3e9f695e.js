(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{352:function(a,s,e){"use strict";e.r(s);var t=e(4),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"redis-配置文件介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-配置文件介绍"}},[a._v("#")]),a._v(" Redis 配置文件介绍")]),a._v(" "),s("h2",{attrs:{id:"网络相关1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络相关1"}},[a._v("#")]),a._v(" 网络相关1")]),a._v(" "),s("h3",{attrs:{id:"_1、bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、bind"}},[a._v("#")]),a._v(" 1、bind")]),a._v(" "),s("ul",[s("li",[a._v("默认情况 bind=127.0.0.1 只能接受本机的访问请求")]),a._v(" "),s("li",[a._v("不写的情况下，无限制接受任何 ip 地址的访问")]),a._v(" "),s("li",[a._v("生产环境肯定要写你应用服务器的地址；服务器是需要远程访问的，所以需要将其注释掉")]),a._v(" "),s("li",[a._v("如果开启了 protected-mode，那么在没有设定 bind ip 且没有设密码的情况下，Redis 只允许接受本机的响应")])]),a._v(" "),s("h3",{attrs:{id:"_2、protected-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、protected-mode"}},[a._v("#")]),a._v(" 2、protected-mode")]),a._v(" "),s("ul",[s("li",[a._v("将本机访问保护模式设置")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# yes代表不允许外网访问")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# no表示允许外网访问")]),a._v("\nprotected-mode no\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_3、port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、port"}},[a._v("#")]),a._v(" 3、port")]),a._v(" "),s("ul",[s("li",[a._v("端口号，默认 6379")])]),a._v(" "),s("h3",{attrs:{id:"_4、tcp-backlog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、tcp-backlog"}},[a._v("#")]),a._v(" 4、tcp-backlog")]),a._v(" "),s("ul",[s("li",[a._v("设置 tcp 的 backlog，backlog 其实是一个连接队列，backlog 队列总和=未完成三次握手队列 + 已经完成三次握手队列。")]),a._v(" "),s("li",[a._v("在高并发环境下你需要一个高 backlog 值来避免慢客户端连接问题。")]),a._v(" "),s("li",[a._v("注意 Linux 内核会将这个值减小到/proc/sys/net/core/somaxconn 的值（128），所以需要确认增大/proc/sys/net/core/somaxconn 和/proc/sys/net/ipv4/tcp_max_syn_backlog（128）两个值来达到想要的效果")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tcp-backlog "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("511")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_5、-timeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、-timeout"}},[a._v("#")]),a._v(" 5、 timeout")]),a._v(" "),s("ul",[s("li",[a._v("一个空闲的客户端维持多少秒会关闭，0 表示关闭该功能。即永不关闭。")])]),a._v(" "),s("h3",{attrs:{id:"_6、tcp-keepalive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、tcp-keepalive"}},[a._v("#")]),a._v(" 6、tcp-keepalive")]),a._v(" "),s("ul",[s("li",[a._v("对访问客户端的一种心跳检测，每个 n 秒检测一次。")]),a._v(" "),s("li",[a._v("单位为秒，如果设置为 0，则不会进行 Keepalive 检测，建议设置成 60")])]),a._v(" "),s("h2",{attrs:{id:"general-通用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general-通用"}},[a._v("#")]),a._v(" GENERAL 通用")]),a._v(" "),s("h3",{attrs:{id:"_1、-daemonize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、-daemonize"}},[a._v("#")]),a._v(" 1、 daemonize")]),a._v(" "),s("ul",[s("li",[a._v("是否为后台进程，设置为 yes")]),a._v(" "),s("li",[a._v("守护进程，后台启动")])]),a._v(" "),s("h3",{attrs:{id:"_2、pidfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、pidfile"}},[a._v("#")]),a._v(" 2、pidfile")]),a._v(" "),s("ul",[s("li",[a._v("存放 pid 文件的位置，每个实例会产生一个不同的 pid 文件")])]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[a._v("pidfile /var/run/redis_6379.pid\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3、loglevel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、loglevel"}},[a._v("#")]),a._v(" 3、loglevel")]),a._v(" "),s("ul",[s("li",[a._v("指定日志记录级别，Redis 总共支持四个级别：debug、verbose、notice、warning，默认为"),s("code",[a._v("notice")])]),a._v(" "),s("li",[a._v("四个级别根据使用阶段来选择，"),s("code",[a._v("生产环境")]),a._v("选择 notice 或者 warning")])]),a._v(" "),s("h3",{attrs:{id:"_4、logfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、logfile"}},[a._v("#")]),a._v(" 4、logfile")]),a._v(" "),s("ul",[s("li",[a._v("日志文件名称")])]),a._v(" "),s("h3",{attrs:{id:"_5、databases-16"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、databases-16"}},[a._v("#")]),a._v(" 5、databases 16")]),a._v(" "),s("ul",[s("li",[a._v("设定库的数量 默认 16，默认数据库为 0，可以使用 SELECT "),s("dbid",[a._v("命令在连接上指定数据库 id")])],1)]),a._v(" "),s("h2",{attrs:{id:"security-安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#security-安全"}},[a._v("#")]),a._v(" SECURITY 安全")]),a._v(" "),s("h3",{attrs:{id:"_1、设置密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、设置密码"}},[a._v("#")]),a._v(" 1、设置密码")]),a._v(" "),s("ul",[s("li",[a._v("访问密码的查看、设置和取消")]),a._v(" "),s("li",[a._v("在命令中设置密码，只是临时的。重启 redis 服务器，密码就还原了。")]),a._v(" "),s("li",[a._v("永久设置，需要再配置文件中进行设置。")])]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("config get requirepass\nconfig "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" requirepass "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123456"')]),a._v("\nconfig "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" requirepass "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"limits-限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limits-限制"}},[a._v("#")]),a._v(" LIMITS 限制")]),a._v(" "),s("h3",{attrs:{id:"_1、maxclients"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、maxclients"}},[a._v("#")]),a._v(" 1、maxclients")]),a._v(" "),s("ul",[s("li",[a._v("设置 redis 同时可以与多少个客户端进行连接。")]),a._v(" "),s("li",[a._v("默认情况下为 10000 个客户端。")]),a._v(" "),s("li",[a._v("如果达到了此限制，redis 则会拒绝新的连接请求，并且向这些连接请求方发出“max number of clients reached”以作回应。")])]),a._v(" "),s("h3",{attrs:{id:"_2、maxmemory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、maxmemory"}},[a._v("#")]),a._v(" 2、maxmemory")]),a._v(" "),s("ul",[s("li",[a._v("建议"),s("code",[a._v("必须设置")]),a._v("，否则，将内存占满，造成服务器宕机")]),a._v(" "),s("li",[a._v("设置 redis 可以使用的内存量。一旦到达内存使用上限，redis 将会试图移除内部数据，移除规则可以通过 maxmemory-policy 来指定。")]),a._v(" "),s("li",[a._v("如果 redis 无法根据移除规则来移除内存中的数据，或者设置了“不允许移除”，那么 redis 则会针对那些需要申请内存的指令返回错误信息，比如 SET、LPUSH 等。")]),a._v(" "),s("li",[a._v("但是对于无内存申请的指令，仍然会正常响应，比如 GET 等。如果你的 redis 是主 redis（说明你的 redis 有从 redis），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。")])]),a._v(" "),s("h3",{attrs:{id:"_3、maxmemory-policy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、maxmemory-policy"}},[a._v("#")]),a._v(" 3、maxmemory-policy")]),a._v(" "),s("ul",[s("li",[a._v("volatile-lru：使用 LRU 算法移除 key，只对设置了过期时间的键；")]),a._v(" "),s("li",[a._v("allkeys-lru：在所有集合 key 中，使用 LRU 算法移除 key")]),a._v(" "),s("li",[a._v("volatile-random：在过期集合中移除随机的 key，只对设置了过期时间的键")]),a._v(" "),s("li",[a._v("allkeys-random：在所有集合 key 中，移除随机的 key")]),a._v(" "),s("li",[a._v("volatile-ttl：移除那些 TTL 值最小的 key，即那些最近要过期的 key")]),a._v(" "),s("li",[a._v("noeviction：不进行移除。针对写操作，只是返回错误信息")])]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[a._v("# maxmemory-policy noeviction\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_4、maxmemory-samples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、maxmemory-samples"}},[a._v("#")]),a._v(" 4、maxmemory-samples")]),a._v(" "),s("ul",[s("li",[a._v("设置样本数量，LRU 算法和最小 TTL 算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis 默认会检查这么多个 key 并选择其中 LRU 的那个。")]),a._v(" "),s("li",[a._v("一般设置 3 到 7 的数字，数值越小样本越不准确，但性能消耗越小。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);