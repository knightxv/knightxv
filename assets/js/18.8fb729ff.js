(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{342:function(n,a,s){"use strict";s.r(a);var t=s(4),e=Object(t.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"channel数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#channel数据结构"}},[n._v("#")]),n._v(" channel数据结构")]),n._v(" "),a("p",[n._v("channel 是 Golang 在语言层面提供的 goroutine 间的通信方式，比 Unix 管道更易用也更轻便。channel 主要用于进程内各 goroutine 间通信，如果需要跨进程通信，建议使用分布式系统的方法来解决。")]),n._v(" "),a("p",[n._v("本章从源码角度分析 channel 的实现机制，实际上这部分源码非常简单易读。")]),n._v(" "),a("h2",{attrs:{id:"_2-chan-数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-chan-数据结构"}},[n._v("#")]),n._v(" 2. chan 数据结构")]),n._v(" "),a("p",[a("code",[n._v("src/runtime/chan.go:hchan")]),n._v("定义了 channel 的数据结构：")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("type")]),n._v(" hchan "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("struct")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    qcount   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint")]),n._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 当前队列中剩余元素个数")]),n._v("\n    dataqsiz "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint")]),n._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 环形队列长度，即可以存放的元素个数")]),n._v("\n    buf      unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("Pointer "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 环形队列指针")]),n._v("\n    elemsize "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint16")]),n._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 每个元素的大小")]),n._v("\n    closed   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint32")]),n._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 标识关闭状态")]),n._v("\n    elemtype "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v("_type         "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 元素类型")]),n._v("\n    sendx    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint")]),n._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 队列下标，指示元素写入时存放到队列中的位置")]),n._v("\n    recvx    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("uint")]),n._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 队列下标，指示元素从队列的该位置读出")]),n._v("\n    recvq    waitq          "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 等待读消息的goroutine队列")]),n._v("\n    sendq    waitq          "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 等待写消息的goroutine队列")]),n._v("\n    lock mutex              "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 互斥锁，chan不允许并发读写")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br")])]),a("p",[n._v("从数据结构可以看出 channel 由队列、类型信息、goroutine 等待队列组成，下面分别说明其原理。")]),n._v(" "),a("h2",{attrs:{id:"_2-1-环形队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-环形队列"}},[n._v("#")]),n._v(" 2.1 环形队列")]),n._v(" "),a("p",[n._v("chan 内部实现了一个环形队列作为其缓冲区，队列的长度是创建 chan 时指定的。")]),n._v(" "),a("p",[n._v("下图展示了一个可缓存 6 个元素的 channel 示意图：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://www.topgoer.cn/uploads/gozhuanjia/images/m_f1b42d200c5d94d02eeacef7c99aa81b_r.png",alt:"",title:"null"}})]),n._v(" "),a("ul",[a("li",[n._v("dataqsiz 指示了队列长度为 6，即可缓存 6 个元素；")]),n._v(" "),a("li",[n._v("buf 指向队列的内存，队列中还剩余两个元素；")]),n._v(" "),a("li",[n._v("qcount 表示队列中还有两个元素；")]),n._v(" "),a("li",[n._v("sendx 指示后续写入的数据存储的位置，取值[0, 6)；")]),n._v(" "),a("li",[n._v("recvx 指示从该位置读取数据, 取值[0, 6)；")])]),n._v(" "),a("h2",{attrs:{id:"_2-2-等待队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-等待队列"}},[n._v("#")]),n._v(" 2.2 等待队列")]),n._v(" "),a("p",[n._v("从 channel 读数据，如果 channel 缓冲区为空或者没有缓冲区，当前 goroutine 会被阻塞。"),a("br"),n._v("\n向 channel 写数据，如果 channel 缓冲区已满或者没有缓冲区，当前 goroutine 会被阻塞。")]),n._v(" "),a("p",[n._v("被阻塞的 goroutine 将会挂在 channel 的等待队列中：")]),n._v(" "),a("ul",[a("li",[n._v("因读阻塞的 goroutine 会被向 channel 写入数据的 goroutine 唤醒；")]),n._v(" "),a("li",[n._v("因写阻塞的 goroutine 会被从 channel 读数据的 goroutine 唤醒；")])]),n._v(" "),a("p",[n._v("下图展示了一个没有缓冲区的 channel，有几个 goroutine 阻塞等待读数据：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://www.topgoer.cn/uploads/gozhuanjia/images/m_f48c37e012c38de53aeb532c993b6d2d_r.png",alt:"",title:"null"}})]),n._v(" "),a("p",[n._v("注意，一般情况下 recvq 和 sendq 至少有一个为空。只有一个例外，那就是同一个 goroutine 使用 select 语句向 channel 一边写数据，一边读数据。")]),n._v(" "),a("h2",{attrs:{id:"_2-3-类型信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-类型信息"}},[n._v("#")]),n._v(" 2.3 类型信息")]),n._v(" "),a("p",[n._v("一个 channel 只能传递一种类型的值，类型信息存储在 hchan 数据结构中。")]),n._v(" "),a("ul",[a("li",[n._v("elemtype 代表类型，用于数据传递过程中的赋值；")]),n._v(" "),a("li",[n._v("elemsize 代表类型大小，用于在 buf 中定位元素位置。")])]),n._v(" "),a("h2",{attrs:{id:"_2-4-锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-锁"}},[n._v("#")]),n._v(" 2.4 锁")]),n._v(" "),a("p",[n._v("一个 channel 同时仅允许被一个 goroutine 读写，为简单起见，本章后续部分说明读写过程时不再涉及加锁和解锁。")]),n._v(" "),a("h2",{attrs:{id:"_3-channel-读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-channel-读写"}},[n._v("#")]),n._v(" 3. channel 读写")]),n._v(" "),a("h2",{attrs:{id:"_3-1-创建-channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建-channel"}},[n._v("#")]),n._v(" 3.1 创建 channel")]),n._v(" "),a("p",[n._v("创建 channel 的过程实际上是初始化 hchan 结构。其中类型信息和缓冲区长度由 make 语句传入，buf 的大小则与元素大小和缓冲区长度共同决定。")]),n._v(" "),a("p",[n._v("创建 channel 的伪代码如下所示：")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("makechan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v("chantype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" size "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v("hchan "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v("hchan\n    c "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("hchan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("buf "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("元素类型大小"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("elemsize "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" 元素类型大小\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("elemtype "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" 元素类型\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("dataqsiz "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" size\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" c\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("h2",{attrs:{id:"_3-2-向-channel-写数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-向-channel-写数据"}},[n._v("#")]),n._v(" 3.2 向 channel 写数据")]),n._v(" "),a("p",[n._v("向一个 channel 中写数据简单过程如下：")]),n._v(" "),a("ol",[a("li",[n._v("如果等待接收队列 recvq 不为空，说明缓冲区中没有数据或者没有缓冲区，此时直接从 recvq 取出 G,并把数据写入，最后把该 G 唤醒，结束发送过程；")]),n._v(" "),a("li",[n._v("如果缓冲区中有空余位置，将数据写入缓冲区，结束发送过程；")]),n._v(" "),a("li",[n._v("如果缓冲区中没有空余位置，将待发送数据写入 G，将当前 G 加入 sendq，进入睡眠，等待被读 goroutine 唤醒；")])]),n._v(" "),a("p",[n._v("简单流程图如下：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://www.topgoer.cn/uploads/gozhuanjia/images/m_b235ef1f2c6ac1b5d63ec5660da97bd2_r.png",alt:"",title:"null"}})]),n._v(" "),a("h2",{attrs:{id:"_3-3-从-channel-读数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-从-channel-读数据"}},[n._v("#")]),n._v(" 3.3 从 channel 读数据")]),n._v(" "),a("p",[n._v("从一个 channel 读数据简单过程如下：")]),n._v(" "),a("ol",[a("li",[n._v("如果等待发送队列 sendq 不为空，且没有缓冲区，直接从 sendq 中取出 G，把 G 中数据读出，最后把 G 唤醒，结束读取过程；")]),n._v(" "),a("li",[n._v("如果等待发送队列 sendq 不为空，此时说明缓冲区已满，从缓冲区中首部读出数据，把 G 中数据写入缓冲区尾部，把 G 唤醒，结束读取过程；")]),n._v(" "),a("li",[n._v("如果缓冲区中有数据，则从缓冲区取出数据，结束读取过程；")]),n._v(" "),a("li",[n._v("将当前 goroutine 加入 recvq，进入睡眠，等待被写 goroutine 唤醒；")])]),n._v(" "),a("p",[n._v("简单流程图如下：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://www.topgoer.cn/uploads/gozhuanjia/images/m_933ca9af4c3ec1db0b94b8b4ec208d4b_r.png",alt:"",title:"null"}})]),n._v(" "),a("h2",{attrs:{id:"_3-4-关闭-channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-关闭-channel"}},[n._v("#")]),n._v(" 3.4 关闭 channel")]),n._v(" "),a("p",[n._v("关闭 channel 时会把 recvq 中的 G 全部唤醒，本该写入 G 的数据位置为 nil。把 sendq 中的 G 全部唤醒，但这些 G 会 panic。")]),n._v(" "),a("p",[n._v("除此之外，panic 出现的常见场景还有：")]),n._v(" "),a("ol",[a("li",[n._v("关闭值为 nil 的 channel")]),n._v(" "),a("li",[n._v("关闭已经被关闭的 channel")]),n._v(" "),a("li",[n._v("向已经关闭的 channel 写数据")])]),n._v(" "),a("h2",{attrs:{id:"_4-常见用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-常见用法"}},[n._v("#")]),n._v(" 4. 常见用法")]),n._v(" "),a("h2",{attrs:{id:"_4-1-单向-channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-单向-channel"}},[n._v("#")]),n._v(" 4.1 单向 channel")]),n._v(" "),a("p",[n._v("顾名思义，单向 channel 指只能用于发送或接收数据，实际上也没有单向 channel。")]),n._v(" "),a("p",[n._v("我们知道 channel 可以通过参数传递，所谓单向 channel 只是对 channel 的一种使用限制，这跟 C 语言使用 const 修饰函数参数为只读是一个道理。")]),n._v(" "),a("ul",[a("li",[n._v("func readChan(chanName <-chan int)： 通过形参限定函数内部只能从 channel 中读取数据")]),n._v(" "),a("li",[n._v("func writeChan(chanName chan<- int)： 通过形参限定函数内部只能向 channel 中写入数据")])]),n._v(" "),a("p",[n._v("一个简单的示例程序如下：")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("readChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chanName "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" chanName\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("writeChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chanName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    chanName "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" mychan "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("writeChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("mychan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("readChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("mychan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])]),a("p",[n._v("mychan 是个正常的 channel，而 readChan()参数限制了传入的 channel 只能用来读，writeChan()参数限制了传入的 channel 只能用来写。")]),n._v(" "),a("h2",{attrs:{id:"_4-2-select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-select"}},[n._v("#")]),n._v(" 4.2 select")]),n._v(" "),a("p",[n._v("使用 select 可以监控多 channel，比如监控多个 channel，当其中某一个 channel 有数据时，就从其读出数据。")]),n._v(" "),a("p",[n._v("一个简单的示例程序如下：")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("package")]),n._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("import")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"fmt"')]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"time"')]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("addNumberToChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chanName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("for")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        chanName "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n        time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("Second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" chan1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" chan2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("go")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("addNumberToChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chan1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("go")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("addNumberToChan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("for")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("select")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("case")]),n._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" chan1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n            fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"Get element from chan1: %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("case")]),n._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<-")]),n._v(" chan2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n            fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"Get element from chan2: %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n            fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"No element in chan1 and chan2.\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n            time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("Second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br")])]),a("p",[n._v("程序中创建两个 channel： chan1 和 chan2。函数 addNumberToChan()函数会向两个 channel 中周期性写入数据。通过 select 可以监控两个 channel，任意一个可读时就从其中读出数据。")]),n._v(" "),a("p",[n._v("程序输出如下：")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[n._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\\SourceCode\\GoExpert\\src"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("go")]),n._v(" run main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("go")]),n._v("\nGet element from chan1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nGet element from chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nNo element in chan1 and chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("\nGet element from chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nGet element from chan1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nNo element in chan1 and chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("\nGet element from chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nGet element from chan1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\nNo element in chan1 and chan2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[n._v("从输出可见，从 channel 中读出数据的顺序是随机的，事实上 select 语句的多个 case 执行顺序是随机的，关于 select 的实现原理会有专门章节分析。")]),n._v(" "),a("p",[n._v("通过这个示例想说的是：select 的 case 语句读 channel 不会阻塞，尽管 channel 中没有数据。这是由于 case 语句编译后调用读 channel 时会明确传入不阻塞的参数，此时读不到数据时不会将当前 goroutine 加入到等待队列，而是直接返回。")]),n._v(" "),a("h2",{attrs:{id:"_4-3-range"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-range"}},[n._v("#")]),n._v(" 4.3 range")]),n._v(" "),a("p",[n._v("通过 range 可以持续从 channel 中读出数据，好像在遍历一个数组一样，当 channel 中没有数据时会阻塞当前 goroutine，与读 channel 时阻塞处理机制一样。")]),n._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("func")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("chanRange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("chanName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("chan")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[n._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("for")]),n._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("range")]),n._v(" chanName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"Get element from chan: %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("注意：如果向此 channel 写数据的 goroutine 退出时，系统检测到这种情况后会 panic，否则 range 将会永久阻塞。")])])}),[],!1,null,null,null);a.default=e.exports}}]);