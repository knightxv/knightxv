(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{356:function(t,a,s){"use strict";s.r(a);var _=s(4),r=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"redis-事务锁机制、连接池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-事务锁机制、连接池"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"redis%E4%BA%8B%E5%8A%A1%E9%94%81%E6%9C%BA%E5%88%B6%E3%80%81%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[t._v("#")]),t._v(" Redis 事务锁机制、连接池")]),t._v(" "),a("h2",{attrs:{id:"redis-的事务定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-的事务定义"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_redis%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9A%E4%B9%89"}},[t._v("#")]),t._v(" Redis 的事务定义")]),t._v(" "),a("ul",[a("li",[t._v("Redis 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。")]),t._v(" "),a("li",[t._v("Redis 事务的主要作用就是"),a("code",[t._v("串联多个命令")]),t._v("防止别的命令插队。")])]),t._v(" "),a("h2",{attrs:{id:"multi、exec、discard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi、exec、discard"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_multi%E3%80%81exec%E3%80%81discard"}},[t._v("#")]),t._v(" Multi、Exec、discard")]),t._v(" "),a("ul",[a("li",[t._v("从输入 Multi 命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入 Exec 后，Redis 会将之前的命令队列中的命令依次执行。")]),t._v(" "),a("li",[t._v("组队的过程中可以通过 discard 来放弃组队。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/cc84ccecdb124abbadfa36844ea9290e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_12,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4ca8dcf6a7cc434c85345cb1727674e1.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("ul",[a("li",[t._v("组队成功，提交成功")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/693cbc35090a42d9b9f8c6c116f20885.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("ul",[a("li",[t._v("组队阶段报错，提交失败")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/965fcf60eb4e496aa8204feb2bb8cc6b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_10,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),t._v(" "),a("ul",[a("li",[t._v("组队成功，提交有成功有失败情况")])]),t._v(" "),a("h2",{attrs:{id:"事务的错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的错误处理"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86"}},[t._v("#")]),t._v(" 事务的错误处理")]),t._v(" "),a("ul",[a("li",[t._v("组队中某个命令出现了报告错误，执行时整个的所有队列都会被取消。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/0f016c82db9948e38e33448e5222a678.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_12,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),t._v(" "),a("ul",[a("li",[t._v("如果执行阶段某个命令报出了错误，则只有报错的命令不会被执行，而其他的命令都会执行，不会回滚。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/a8a43273ae344efca39efaccb8ad75b9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_12,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"事务冲突的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务冲突的问题"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_%E4%BA%8B%E5%8A%A1%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98"}},[t._v("#")]),t._v(" 事务冲突的问题")]),t._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_%E7%A4%BA%E4%BE%8B"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("ul",[a("li",[t._v("一个请求想给金额减 8000")]),t._v(" "),a("li",[t._v("一个请求想给金额减 5000")]),t._v(" "),a("li",[t._v("一个请求想给金额减 1000")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/bd27150851f249a99312fb621d9c4db5.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("h3",{attrs:{id:"悲观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_%E6%82%B2%E8%A7%82%E9%94%81"}},[t._v("#")]),t._v(" 悲观锁")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/0535daf2843f42ddb18ac96bbda06b0b.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("​ 悲观锁(Pessimistic Lock)"),a("strong",[t._v(", 顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会 block 直到它拿到锁。"),a("strong",[t._v("传统的关系型数据库里边就用到了很多这种锁机制")]),t._v("，比如")]),t._v("行锁**，"),a("strong",[t._v("表锁")]),t._v("等，"),a("strong",[t._v("读锁")]),t._v("，**写锁等，都是在做操作之前先上锁。")]),t._v(" "),a("h3",{attrs:{id:"乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_%E4%B9%90%E8%A7%82%E9%94%81"}},[t._v("#")]),t._v(" 乐观锁")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/d3c07af36f3146788075d762f88805b5.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("​ 乐观锁(Optimistic Lock),顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。"),a("strong",[t._v("乐观锁适用于多读的应用类型，这样可以提高吞吐量")]),t._v("。Redis 就是利用这种 check-and-set 机制实现事务的。")]),t._v(" "),a("h3",{attrs:{id:"watch-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch-key"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_watch-key"}},[t._v("#")]),t._v(" WATCH key")]),t._v(" "),a("p",[t._v("​ 在执行 multi 之前，先执行 watch key1 [key2],可以监视一个(或多个) key ，如果在事务"),a("strong",[t._v("执行之前这个(或这些) key")]),t._v(" "),a("strong",[t._v("被其他命令所改动，那么事务将被打断。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/22c8f119268442d5ad246baed5a51564.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("h3",{attrs:{id:"unwatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unwatch"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_unwatch"}},[t._v("#")]),t._v(" unwatch")]),t._v(" "),a("ul",[a("li",[t._v("取消 WATCH 命令对所有 key 的监视。")]),t._v(" "),a("li",[t._v("如果在执行 WATCH 命令之后，EXEC 命令或 DISCARD 命令先被执行了的话，那么就不需要再执行 UNWATCH 了。")])]),t._v(" "),a("p",[t._v("http://doc.redisfans.com/transaction/exec.html")]),t._v(" "),a("h2",{attrs:{id:"redis-事务三特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-事务三特性"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"#_redis%E4%BA%8B%E5%8A%A1%E4%B8%89%E7%89%B9%E6%80%A7"}},[t._v("#")]),t._v(" Redis 事务三特性")]),t._v(" "),a("ul",[a("li",[t._v("单独的隔离操作\n"),a("ul",[a("li",[t._v("事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。")])])]),t._v(" "),a("li",[t._v("没有隔离级别的概念\n"),a("ul",[a("li",[t._v("队列中的命令没有提交之前都不会实际被执行，因为事务提交前任何指令都不会被实际执行")])])]),t._v(" "),a("li",[t._v("不保证原子性\n"),a("ul",[a("li",[t._v("事务中如果有一条命令执行失败，其后的命令仍然会被执行，没有回滚")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);