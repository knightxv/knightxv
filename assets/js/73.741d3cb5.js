(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{395:function(t,e,r){"use strict";r.r(e);var s=r(4),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"三次握手机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三次握手机制"}},[t._v("#")]),t._v(" 三次握手机制")]),t._v(" "),e("h3",{attrs:{id:"流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[t._v("#")]),t._v(" 流程：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("第一次握手 (发送连接请求报文 SYN=1, 初始序号随机 seq=x，ACK=0)，发送完毕后，客户端就进入 SYN_SENT 状态")])]),t._v(" "),e("li",[e("p",[t._v("第二次握手 (发送连接确认报文 SYN=1, ACK=1, seq=y, ACKnum=x+1)， 发送完毕后，服务器端就进入 SYN_RCV 状态。")])]),t._v(" "),e("li",[e("p",[t._v("第三次握手 (发出连接确认报文 ACK=1，ACKnum=y+1，序号 seq=x+1)，发送完毕后，客户端进入 ESTABLISHED 状态，当服务器端接收到这个包时，也进入 ESTABLISHED 状态。")])])]),t._v(" "),e("p",[t._v("ACK 也好，ack 也好，只不过是个代号而已 ACK 是确认值(Acknowledgement)，为 1 便是确认连接。 ack 是确认编号(Acknowledgement Number)，即接收到的上一次远端主机传来的 seq 然后+1，再发送给远端主机。提示远端主机已经成功接收上一次所有数据。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/knightxv/image-hosting@master/20230128/3.231644aj7a.webp",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),e("p",[t._v("确保可靠的通信通道，让双方都确认对方和自己的接收和发送功能是正常的。")]),t._v(" "),e("p",[t._v("将三次握手通俗的说:")]),t._v(" "),e("p",[t._v("第一次握手，Server 知道 Client 的发送能力和自己的接收能力是正常的。")]),t._v(" "),e("p",[t._v("第二次握手，Client 知道 Server 的发送和接收能力和自己的发送和接收能力是正常的，但是 Server 还不知道我的接收和他的发送能力正常与否。")]),t._v(" "),e("p",[t._v("第三次握手，Client 回馈，让 Server 知道自己的发送能力和 Client 的接收能力正常。")])])}),[],!1,null,null,null);e.default=a.exports}}]);