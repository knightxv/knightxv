(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{363:function(a,_,t){"use strict";t.r(_);var E=t(4),r=Object(E.a)({},(function(){var a=this,_=a._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h2",{attrs:{id:"redis-的缓存过期淘汰策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-的缓存过期淘汰策略"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"redis%E7%9A%84%E7%BC%93%E5%AD%98%E8%BF%87%E6%9C%9F%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5"}},[a._v("#")]),a._v(" Redis 的缓存过期淘汰策略")]),a._v(" "),_("h2",{attrs:{id:"_1、redis-内存满了怎么办"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、redis-内存满了怎么办"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81redis%E5%86%85%E5%AD%98%E6%BB%A1%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E"}},[a._v("#")]),a._v(" 1、Redis 内存满了怎么办")]),a._v(" "),_("h3",{attrs:{id:"_1、redis-默认内存多少-在哪里查看-如何设置修改"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、redis-默认内存多少-在哪里查看-如何设置修改"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81redis%E9%BB%98%E8%AE%A4%E5%86%85%E5%AD%98%E5%A4%9A%E5%B0%91-%E5%9C%A8%E5%93%AA%E9%87%8C%E6%9F%A5%E7%9C%8B-%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E4%BF%AE%E6%94%B9"}},[a._v("#")]),a._v(" 1、redis 默认内存多少？在哪里查看?如何设置修改?")]),a._v(" "),_("h4",{attrs:{id:"_1、查看-redis-最大占用内存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看-redis-最大占用内存"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81%E6%9F%A5%E7%9C%8Bredis%E6%9C%80%E5%A4%A7%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98"}},[a._v("#")]),a._v(" 1、查看 Redis 最大占用内存")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/eafe1b82cc0a4185a5a6c0ede6c81f4c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),a._v(" "),_("p",[_("strong",[a._v("打开 redis 配置文件，设置 maxmemory 参数，maxmemory 是 bytes 字节类型，注意转换。")])]),a._v(" "),_("h4",{attrs:{id:"_2、redis-默认内存多少可以用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、redis-默认内存多少可以用"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_2%E3%80%81redis%E9%BB%98%E8%AE%A4%E5%86%85%E5%AD%98%E5%A4%9A%E5%B0%91%E5%8F%AF%E4%BB%A5%E7%94%A8"}},[a._v("#")]),a._v(" 2、redis 默认内存多少可以用？")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/16dc825e851f439ab6a524542e04b38b.png",alt:"在这里插入图片描述"}})]),a._v(" "),_("h4",{attrs:{id:"_3、一般生产上你如何配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、一般生产上你如何配置"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_3%E3%80%81%E4%B8%80%E8%88%AC%E7%94%9F%E4%BA%A7%E4%B8%8A%E4%BD%A0%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE"}},[a._v("#")]),a._v(" 3、一般生产上你如何配置？")]),a._v(" "),_("p",[a._v("一般推荐 Redis 设置内存为最大物理内存的四分之三")]),a._v(" "),_("h4",{attrs:{id:"_4、如何修改-redis-内存设置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、如何修改-redis-内存设置"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_4%E3%80%81%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9redis%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE"}},[a._v("#")]),a._v(" 4、如何修改 redis 内存设置")]),a._v(" "),_("ul",[_("li",[a._v("通过修改文件配置")])]),a._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7987224b03ea49aca4e550a075430103.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGlhb3h1ZUB4dWUuY29t,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),a._v(" "),_("ul",[_("li",[a._v("通过命令修改")])]),a._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9fd8897a948c4048a81f1d1afc51cd42.png",alt:"在这里插入图片描述"}})]),a._v(" "),_("h4",{attrs:{id:"_5、什么命令查看-redis-内存使用情况"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、什么命令查看-redis-内存使用情况"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_5%E3%80%81%E4%BB%80%E4%B9%88%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8Bredis%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5"}},[a._v("#")]),a._v(" 5、什么命令查看 redis 内存使用情况?")]),a._v(" "),_("h3",{attrs:{id:"_2、结论"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、结论"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_2%E3%80%81%E7%BB%93%E8%AE%BA"}},[a._v("#")]),a._v(" 2、结论")]),a._v(" "),_("blockquote",[_("p",[a._v("设置了 maxmemory 的选项，假如 redis 内存使用达到上限")]),a._v(" "),_("p",[a._v("没有加上过期时间就会导致数据写满 maxmemory 为了避免类似情况，使用内存淘汰策略")])]),a._v(" "),_("h2",{attrs:{id:"_2、往-redis-里写的数据是怎么没了的-它如何删除的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、往-redis-里写的数据是怎么没了的-它如何删除的"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_2%E3%80%81%E5%BE%80redis%E9%87%8C%E5%86%99%E7%9A%84%E6%95%B0%E6%8D%AE%E6%98%AF%E6%80%8E%E4%B9%88%E6%B2%A1%E4%BA%86%E7%9A%84-%E5%AE%83%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E7%9A%84"}},[a._v("#")]),a._v(" 2、往 redis 里写的数据是怎么没了的?它如何删除的？")]),a._v(" "),_("h3",{attrs:{id:"_1、三种不同的删除策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、三种不同的删除策略"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5"}},[a._v("#")]),a._v(" 1、三种不同的删除策略")]),a._v(" "),_("blockquote",[_("p",[a._v("如果一个键是过期的，那它到了过期时间之后是不是马上就从内存中被被删除呢？？")]),a._v(" "),_("p",[a._v("NO")])]),a._v(" "),_("h4",{attrs:{id:"_1、立即删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、立即删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81%E7%AB%8B%E5%8D%B3%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 1、立即删除")]),a._v(" "),_("blockquote",[_("p",[a._v("Redis 不可能时时刻刻遍历所有被设置了生存时间的 key，来检测数据是否已经到达过期时间，然后对它进行删除。")]),a._v(" "),_("p",[a._v("立即删除能保证内存中数据的最大新鲜度，因为它保证过期键值会在过期后马上被删除，其所占用的内存也会随之释放。但是立即删除对 cpu 是最不友好的。因为删除操作会占用 cpu 的时间，如果刚好碰上了 cpu 很忙的时候，比如正在做交集或排序等计算的时候，就会给 cpu 造成额外的压力，让 CPU 心累，时时需要删除，忙死。。。。。。。这会产生大量的性能消耗，同时也会影响数据的读取操作。")]),a._v(" "),_("p",[a._v("总结：对 CPU 不友好，用处理器性能换取存储空间 （拿时间换空间）")])]),a._v(" "),_("h4",{attrs:{id:"_2、惰性删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、惰性删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_2%E3%80%81%E6%83%B0%E6%80%A7%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 2、惰性删除")]),a._v(" "),_("blockquote",[_("p",[a._v("数据到达过期时间，不做处理。等下次访问该数据时，")]),a._v(" "),_("p",[a._v("如果未过期，返回数据 ；")]),a._v(" "),_("p",[a._v("发现已过期，删除，返回不存在。")]),a._v(" "),_("p",[a._v("惰性删除策略的缺点是，它对内存是最不友好的")]),a._v(" "),_("p",[a._v("如果一个键已经过期，而这个键又仍然保留在 redis 中，那么只要这个过期键不被删除，它所占用的内存就不会释放。")]),a._v(" "),_("p",[a._v("在使用惰性删除策略时，如果数据库中有非常多的过期键，而这些过期键又恰好没有被访问到的话，那么它们也许永远也不会被删除(除非用户手动执行 FLUSHDB)，我们甚至可以将这种情况看作是一种内存泄漏–无用的垃圾数据占用了大量的内存，而服务器却不会自己去释放它们，这对于运行状态非常依赖于内存的 Redis 服务器来说,肯定不是一个好消息")]),a._v(" "),_("p",[a._v("总结：对 memory 不友好，用存储空间换取处理器性能（拿空间换时间）")])]),a._v(" "),_("h4",{attrs:{id:"_3、定期删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、定期删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_3%E3%80%81%E5%AE%9A%E6%9C%9F%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 3、定期删除")]),a._v(" "),_("blockquote",[_("p",[a._v("定期删除策略是前两种策略的折中：")]),a._v(" "),_("p",[a._v("定期删除策略每隔一段时间执行一次删除过期键操作，并通过限制删除操作执行的时长和频率来减少删除操作对 CPU 时间的影响。")]),a._v(" "),_("p",[a._v("周期性轮询 redis 库中的时效性数据，采用随机抽取的策略，利用过期数据占比的方式控制删除频度")]),a._v(" "),_("p",[a._v("特点 1：CPU 性能占用设置有峰值，检测频度可自定义设置")]),a._v(" "),_("p",[a._v("特点 2：内存压力不是很大，长期占用内存的冷数据会被持续清理")]),a._v(" "),_("p",[a._v("总结：周期性抽查存储空间 （随机抽查，重点抽查）")]),a._v(" "),_("p",[a._v("redis 默认每个 100ms 检查，是否有过期的 key，有过期 key 则删除。注意：redis 不是每隔 100ms 将所有的 key 检查一次而是随机抽取进行检查(如果每隔 100ms,全部 key 进行检查，redis 直接进去 ICU)。因此，如果只采用定期删除策略，会导致很多 key 到时间没有删除。")]),a._v(" "),_("p",[a._v("定期删除策略的难点是确定删除操作执行的时长和频率：如果删除操作执行得太频繁，或者执行的时间太长，定期删除策略就会退化成立即删除策略，以至于将 CPU 时间过多地消耗在删除过期键上面。如果删除操作执行得太少，或者执行的时间太短，定期删除策略又会和惰性删除束略一样，出现浪费内存的情况。因此，如果采用定期删除策略的话，服务器必须根据情况，合理地设置删除操作的执行时长和执行频率。")]),a._v(" "),_("p",[a._v("总结：定期抽样 key，判断是否过期 会有漏网之鱼")])]),a._v(" "),_("p",[a._v("1 定期删除时，从来没有被抽查到")]),a._v(" "),_("p",[a._v("2 惰性删除时，也从来没有被点中使用过")]),a._v(" "),_("p",[a._v("上述 2 步骤======> 大量过期的 key 堆积在内存中，导致 redis 内存空间紧张或者很快耗尽")]),a._v(" "),_("h2",{attrs:{id:"_3、redis-缓存淘汰策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis-缓存淘汰策略"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_3%E3%80%81redis%E7%BC%93%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5"}},[a._v("#")]),a._v(" 3、redis 缓存淘汰策略")]),a._v(" "),_("h3",{attrs:{id:"_1、noeviction-不会驱逐任何-key"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、noeviction-不会驱逐任何-key"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_1%E3%80%81noeviction-%E4%B8%8D%E4%BC%9A%E9%A9%B1%E9%80%90%E4%BB%BB%E4%BD%95key"}},[a._v("#")]),a._v(" 1、noeviction: 不会驱逐任何 key")]),a._v(" "),_("h3",{attrs:{id:"_2、allkeys-lru-对所有-key-使用-lru-算法进行删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、allkeys-lru-对所有-key-使用-lru-算法进行删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_2%E3%80%81allkeys-lru-%E5%AF%B9%E6%89%80%E6%9C%89key%E4%BD%BF%E7%94%A8lru%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 2、allkeys-lru: 对所有 key 使用 LRU 算法进行删除")]),a._v(" "),_("h3",{attrs:{id:"_3、volatile-lru-对所有设置了过期时间的-key-使用-lru-算法进行删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、volatile-lru-对所有设置了过期时间的-key-使用-lru-算法进行删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_3%E3%80%81volatile-lru-%E5%AF%B9%E6%89%80%E6%9C%89%E8%AE%BE%E7%BD%AE%E4%BA%86%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4%E7%9A%84key%E4%BD%BF%E7%94%A8lru%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 3、volatile-lru: 对所有设置了过期时间的 key 使用 LRU 算法进行删除")]),a._v(" "),_("h3",{attrs:{id:"_4、allkeys-random-对所有-key-随机删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、allkeys-random-对所有-key-随机删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_4%E3%80%81allkeys-random-%E5%AF%B9%E6%89%80%E6%9C%89key%E9%9A%8F%E6%9C%BA%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 4、allkeys-random: 对所有 key 随机删除")]),a._v(" "),_("h3",{attrs:{id:"_5、volatile-random-对所有设置了过期时间的-key-随机删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、volatile-random-对所有设置了过期时间的-key-随机删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_5%E3%80%81volatile-random-%E5%AF%B9%E6%89%80%E6%9C%89%E8%AE%BE%E7%BD%AE%E4%BA%86%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4%E7%9A%84key%E9%9A%8F%E6%9C%BA%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 5、volatile-random: 对所有设置了过期时间的 key 随机删除")]),a._v(" "),_("h3",{attrs:{id:"_6、volatile-ttl-删除马上要过期的-key"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、volatile-ttl-删除马上要过期的-key"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_6%E3%80%81volatile-ttl-%E5%88%A0%E9%99%A4%E9%A9%AC%E4%B8%8A%E8%A6%81%E8%BF%87%E6%9C%9F%E7%9A%84key"}},[a._v("#")]),a._v(" 6、volatile-ttl: 删除马上要过期的 key")]),a._v(" "),_("h3",{attrs:{id:"_7、allkeys-lfu-对所有-key-使用-lfu-算法进行删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7、allkeys-lfu-对所有-key-使用-lfu-算法进行删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_7%E3%80%81allkeys-lfu-%E5%AF%B9%E6%89%80%E6%9C%89key%E4%BD%BF%E7%94%A8lfu%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 7、allkeys-lfu: 对所有 key 使用 LFU 算法进行删除")]),a._v(" "),_("h3",{attrs:{id:"_8、volatile-lfu-对所有设置了过期时间的-key-使用-lfu-算法进行删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8、volatile-lfu-对所有设置了过期时间的-key-使用-lfu-算法进行删除"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_8%E3%80%81volatile-lfu-%E5%AF%B9%E6%89%80%E6%9C%89%E8%AE%BE%E7%BD%AE%E4%BA%86%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4%E7%9A%84key%E4%BD%BF%E7%94%A8lfu%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4"}},[a._v("#")]),a._v(" 8、volatile-lfu: 对所有设置了过期时间的 key 使用 LFU 算法进行删除")]),a._v(" "),_("h3",{attrs:{id:"_9、总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9、总结"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_9%E3%80%81%E6%80%BB%E7%BB%93"}},[a._v("#")]),a._v(" 9、总结")]),a._v(" "),_("ul",[_("li",[a._v("2 * 4 得 8")]),a._v(" "),_("li",[a._v("2 个维度")]),a._v(" "),_("li",[_("ul",[_("li",[a._v("过期键中筛选")])])]),a._v(" "),_("li",[a._v("所有键中筛选")]),a._v(" "),_("li",[a._v("4 个方面")]),a._v(" "),_("li",[_("ul",[_("li",[a._v("LRU")])])]),a._v(" "),_("li",[a._v("LFU")]),a._v(" "),_("li",[a._v("random")]),a._v(" "),_("li",[a._v("ttl")])]),a._v(" "),_("h3",{attrs:{id:"_10、生产用哪个"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10、生产用哪个"}},[a._v("#")]),a._v(" "),_("a",{attrs:{href:"#_10%E3%80%81%E7%94%9F%E4%BA%A7%E7%94%A8%E5%93%AA%E4%B8%AA"}},[a._v("#")]),a._v(" 10、生产用哪个")])])}),[],!1,null,null,null);_.default=r.exports}}]);